name: Build and Release Flutter macOS and Windows Apps

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS app
        run: flutter build macos --release

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v2
        with:
          name: macos-app
          path: build/macos/Build/Products/Release/*.app

      - name: Build Windows app
        run: flutter build windows --release

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-app
          path: build/windows/runner/Release/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download macOS artifact
        uses: actions/download-artifact@v2
        with:
          name: macos-app
          path: macos-app

      - name: Download Windows artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-app
          path: windows-app

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload macOS artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos-app/*.app
          asset_name: macos-app.zip
          asset_content_type: application/zip

      - name: Upload Windows artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-app/*.exe
          asset_name: windows-app.exe
          asset_content_type: application/octet-stream
